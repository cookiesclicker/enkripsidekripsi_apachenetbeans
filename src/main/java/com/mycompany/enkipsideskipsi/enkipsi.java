/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.enkipsideskipsi;

import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.PBEKeySpec;
import javax.swing.JOptionPane;
   // Variables declaration - do not modify                     

/**
 *
 * @author victus
 */
public class enkipsi extends javax.swing.JFrame {

    /**
     * Creates new form enkipsi
     */
    public enkipsi() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPlaintext = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtChipertext = new javax.swing.JTextArea();
        btenkrip = new javax.swing.JButton();
        btdeskrip = new javax.swing.JButton();
        btkeluar = new javax.swing.JButton();
        txtkey = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Swis721 Blk BT", 1, 18)); // NOI18N
        jLabel1.setText("ENCRYPTION & DECRYPTION");

        jLabel2.setFont(new java.awt.Font("Swis721 Hv BT", 1, 12)); // NOI18N
        jLabel2.setText("WITH NETBEANS ");

        jLabel3.setText("CREATED BY : VENESSE KAYLASHA ALVINO PUTRI 21330007 ");

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jLabel4.setText("PLAIN TEXT");

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jLabel5.setText("ENCRYPTED TEXT");

        txtPlaintext.setColumns(20);
        txtPlaintext.setRows(5);
        jScrollPane1.setViewportView(txtPlaintext);

        txtChipertext.setColumns(20);
        txtChipertext.setRows(5);
        jScrollPane2.setViewportView(txtChipertext);

        btenkrip.setText("ENSKRIPSI TEXT");
        btenkrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btenkripActionPerformed(evt);
            }
        });

        btdeskrip.setText("DEKRIPSI TEXT");
        btdeskrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btdeskripActionPerformed(evt);
            }
        });

        btkeluar.setText("OUT");
        btkeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btkeluarActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel6.setText("KEY");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Caesar Cipher", "XOR Cipher", "Atbash Cipher" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btenkrip))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btdeskrip)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtkey, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(51, 51, 51))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(jLabel4)
                        .addGap(232, 232, 232)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addComponent(btkeluar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btenkrip, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btdeskrip, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btkeluar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtkey, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btenkripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btenkripActionPerformed
    String selectedAlgorithm = (String) jComboBox1.getSelectedItem();
    String key = txtkey.getText();
    String plaintext = txtPlaintext.getText();
    String output = "";

    if (key.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Kunci tidak boleh kosong.");
        return;
    }

    switch (selectedAlgorithm) {
        case "Caesar Cipher":
            try {
                int shift = Integer.parseInt(key);
                output = caesarCipher(plaintext, shift);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Kunci harus berupa angka untuk Caesar Cipher.");
                return;
            }
            break;
        case "XOR Cipher":
            if (key.length() < 1) {
                JOptionPane.showMessageDialog(this, "Kunci untuk XOR Cipher tidak boleh kosong.");
                return;
            }
            output = xorCipher(plaintext, key);
            break;
        case "Atbash Cipher":
            if (key.length() < 1) {
                JOptionPane.showMessageDialog(this, "Kunci untuk Atbash Cipher tidak boleh kosong.");
                return;
            }
            output = atbashCipher(plaintext, key);
            break;
    }

    // kunci
    String isitext = key.length() + key + output;
    txtChipertext.setText(isitext);
    txtPlaintext.setText("");
    txtkey.setText(""); // Menghilangkan kunci setelah enkripsi
    }//GEN-LAST:event_btenkripActionPerformed

    private void btdeskripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btdeskripActionPerformed
    String selectedAlgorithm = (String) jComboBox1.getSelectedItem();
    String ciphertext = txtChipertext.getText();
    String key = txtkey.getText();
    String output = "";

    if (ciphertext.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Ciphertext kosong. Tidak dapat didekripsi.");
        return;
    }

    // Ambil panjang kunci dari ciphertext
    char k = ciphertext.charAt(0);
    int jumkey = Character.getNumericValue(k); // panjang kunci
    StringBuilder extractedKey = new StringBuilder();

    for (int i = 1; i <= jumkey; i++) {
        extractedKey.append(ciphertext.charAt(i));
    }

    // Validasi kunci
    if (!extractedKey.toString().equals(key)) {
        JOptionPane.showMessageDialog(null, "Key tidak cocok\nSilahkan coba lagi");
        return;
    }

    // Dekripsi teks
    String encryptedText = ciphertext.substring(jumkey + 1); // Mengambil bagian yang terenkripsi
    switch (selectedAlgorithm) {
        case "Caesar Cipher":
            try {
                int shift = Integer.parseInt(key);
                output = caesarCipherDecrypt(encryptedText, shift);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Kunci harus berupa angka untuk Caesar Cipher.");
                return;
            }
            break;
        case "XOR Cipher":
            output = xorCipherDecrypt(encryptedText, key);
            break;
        case "Atbash Cipher":
            output = atbashCipherDecrypt(encryptedText, key); // Menggunakan kunci untuk Atbash
            break;
    }

    txtPlaintext.setText(output);
    txtkey.setText(""); // kunci setelah proses dekripsi
    }//GEN-LAST:event_btdeskripActionPerformed


// Algoritma Atbash Cipher
private String atbashCipher(String text, String key) {
    StringBuilder result = new StringBuilder();
    for (char c : text.toCharArray()) {
        if (Character.isLetter(c)) {
            char base = Character.isLowerCase(c) ? 'a' : 'A';
            result.append((char) (base + (25 - (c - base))));
        } else {
            result.append(c);
        }
    }
    // Menambahkan kunci pada hasil setelah enkripsi
    return result.toString() + key;
}

private String atbashCipherDecrypt(String text, String key) {
    // Menghilangkan kunci dari hasil dekripsi
    String decryptedText = text.substring(0, text.length() - key.length());
    StringBuilder result = new StringBuilder();
    
    for (char c : decryptedText.toCharArray()) {
        if (Character.isLetter(c)) {
            char base = Character.isLowerCase(c) ? 'a' : 'A';
            result.append((char) (base + (25 - (c - base))));
        } else {
            result.append(c);
        }
    }
    
    return result.toString(); // Hasil dekripsi
}


// Algoritma Caesar Cipher
private String caesarCipher(String text, int shift) {
    StringBuilder result = new StringBuilder();
    for (char c : text.toCharArray()) {
        if (Character.isLetter(c)) {
            char base = Character.isLowerCase(c) ? 'a' : 'A';
            result.append((char) ((c - base + shift) % 26 + base));
        } else {
            result.append(c);
        }
    }
    return result.toString();
}

private String caesarCipherDecrypt(String text, int shift) {
    return caesarCipher(text, 26 - (shift % 26));
}

// Algoritma XOR Cipher
private String xorCipher(String text, String key) {
    StringBuilder result = new StringBuilder();
    for (int i = 0; i < text.length(); i++) {
        result.append((char) (text.charAt(i) ^ key.charAt(i % key.length())));
    }
    return result.toString();
}

private String xorCipherDecrypt(String text, String key) {
    return xorCipher(text, key); // XOR dekripsi sama dengan enkripsi
}


    private void btkeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btkeluarActionPerformed
        System.exit(1);
    }//GEN-LAST:event_btkeluarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> new enkipsi().setVisible(true));
    }                
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btdeskrip;
    private javax.swing.JButton btenkrip;
    private javax.swing.JButton btkeluar;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtChipertext;
    private javax.swing.JTextArea txtPlaintext;
    private javax.swing.JTextField txtkey;
    // End of variables declaration//GEN-END:variables
}
